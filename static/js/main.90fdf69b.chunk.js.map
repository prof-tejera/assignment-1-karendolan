{"version":3,"sources":["components/documentation/DocumentComponent.js","components/generic/Loading.js","shared/COLOR.js","components/generic/Button.js","components/generic/DisplayTime.js","components/generic/Input.js","components/generic/DisplayRounds.js","utils/helpers.js","components/generic/ButtonPanel.js","components/generic/Panel.js","views/DocumentationView.js","components/timers/Stopwatch.js","components/timers/Countdown.js","components/timers/XY.js","components/timers/Tabata.js","views/TimersView.js","App.js","index.js"],"names":["Wrapper","styled","div","Container","Title","RenderComponent","Documentation","table","DocumentComponent","this","props","title","component","propDocs","map","doc","prop","description","type","defaultValue","React","Component","primaryColor","sizeMapping","small","medium","large","Dot","span","size","color","DotGroup","Loading","docs","key","defaultProps","COLOR","primary0","primary1","primary2","primary3","primary4","primaryLightest","secondary10","secondary11","secondary12","secondary13","secondary14","secondary20","secondary21","secondary22","secondary23","secondary24","GENERIC","BUTTON_COLORS","active","background","inactive","DISPLAY_TIME","label","DISPLAY_ROUNDS","INPUT","PANEL","DEFAULT","DISPLAY","CONTROLS","ButtonStyled","input","activeKey","Button","text","onClick","value","actve","String","fontSizeMap","Label","DisplayTime","seconds","textSize","hour","Math","floor","min","sec","slice","InputContainer","InputStyled","LabelStyled","Input","onChange","name","maxNum","htmlFor","id","max","undefined","Round","RoundGroup","DisplayRounds","numRounds","curRound","dots","Array","from","e","i","isCurRound","STATUS","ButtonPanel","status","onReset","getText","PanelStyle","InputsContainer","DisplayContainer","ControlsContainer","Panel","inputs","displayTimes","displayRounds","DocList","components","CurrComp","Stopwatch","event","num","parseInt","target","setState","state","curSecond","timerTitle","Countdown","XY","workSecs","rounds","curSec","Tabata","restSecs","Timers","Timer","TimerTitle","App","timers","C","timer","to","path","DocumentationView","TimersView","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAGMA,EAAUC,IAAOC,IAAV,+EAKPC,EAAYF,IAAOC,IAAV,mGAMTE,EAAQH,IAAOC,IAAV,sHAOLG,EAAkBJ,IAAOC,IAAV,yGAOfI,EAAgBL,IAAOM,MAAV,6CAIbC,E,4JACJ,WACE,OACE,eAACR,EAAD,WACE,cAACI,EAAD,UAAQK,KAAKC,MAAMC,QACnB,eAACR,EAAD,WACE,cAACE,EAAD,UAAkBI,KAAKC,MAAME,YAC7B,eAAC,EAAD,WACE,+BACE,sCACA,6CACA,sCACA,kDAEDH,KAAKC,MAAMG,SAASC,KAAI,SAACC,GACxB,OACE,+BACE,6BAAKA,EAAIC,OACT,6BAAKD,EAAIE,cACT,6BAAKF,EAAIG,OACT,6BACE,+BAAOH,EAAII,oC,GArBCC,IAAMC,WAiCvBb,IC7DTc,EAAe,UAEfC,EAAc,CAClBC,MAAO,GACPC,OAAQ,GACRC,MAAO,IAGHvB,EAAYF,IAAOC,IAAV,wXAqBTyB,EAAM1B,IAAO2B,KAAV,qXAEE,SAAClB,GAAD,OAAWA,EAAMmB,QAChB,SAACnB,GAAD,OAAWA,EAAMmB,QACP,SAACnB,GAAD,OAAWA,EAAMoB,SAiBjCC,EAAW9B,IAAOC,IAAV,8CAIR8B,E,4JACJ,WACE,IAAMH,EAAON,EAAYd,KAAKC,MAAMmB,MAC5BC,EAAUrB,KAAKC,MAAfoB,MAER,OACE,eAAC,EAAD,WACE,eAACC,EAAD,WACE,cAACJ,EAAD,CAAKE,KAAMA,EAAMC,MAAOA,IACxB,cAACH,EAAD,CAAKE,KAAMA,EAAMC,MAAOA,OAE1B,eAACC,EAAD,WACE,cAACJ,EAAD,CAAKE,KAAMA,EAAMC,MAAOA,IACxB,cAACH,EAAD,CAAKE,KAAMA,EAAMC,MAAOA,c,GAbZV,IAAMC,WAqB5BW,EAAQC,KAAS,CACbtB,MAAO,mBACPC,UAAW,cAAC,EAAD,IACXF,MAAO,CACL,CACEM,KAAM,OACNkB,IAAK,OACLjB,YAAa,0CACbC,KAAM,SACNC,aAAc,UAEhB,CACEH,KAAM,QACNkB,IAAK,QACLjB,YAAa,2CACbC,KAAM,SACNC,aAAcG,KAUtBU,EAAQG,aAAe,CACrBN,KAAM,SACNC,MAAOR,GAGMU,I,EAAAA,ICzGTI,EAAQ,CACZC,SAAU,CAAEP,MAAO,WACnBQ,SAAU,CAAER,MAAO,WACnBS,SAAU,CAAET,MAAO,WACnBU,SAAU,CAAEV,MAAO,WACnBW,SAAU,CAAEX,MAAO,WACnBY,gBAAiB,CAACZ,MAAO,WAEzBa,YAAa,CAAEb,MAAO,WACtBc,YAAa,CAAEd,MAAO,WACtBe,YAAa,CAAEf,MAAO,WACtBgB,YAAa,CAAEhB,MAAO,WACtBiB,YAAa,CAAEjB,MAAO,WAEtBkB,YAAa,CAAElB,MAAO,WACtBmB,YAAa,CAAEnB,MAAO,WACtBoB,YAAa,CAAEpB,MAAO,WACtBqB,YAAa,CAAErB,MAAO,WACtBsB,YAAa,CAAEtB,MAAO,YA4DTuB,EAzDC,CACdjB,QACAkB,cAAc,CACZC,OAAQ,CACNzB,MAAOM,EAAMK,SAASX,MACtB0B,WAAYpB,EAAMc,YAAYpB,OAEhC2B,SAAU,CACR3B,MAAOM,EAAMa,YAAYnB,MACzB0B,WAAYpB,EAAMI,SAASV,QAG/B4B,aAAc,CACZC,MAAO,CACL7B,MAAOM,EAAMM,gBAAgBZ,OAE/ByB,OAAQ,CACNzB,MAAOM,EAAMQ,YAAYd,OAE3B2B,SAAU,CACR3B,MAAOM,EAAMO,YAAYb,QAG7B8B,eAAgB,CACdL,OAAQ,CACNzB,MAAOM,EAAMK,SAASX,MACtB0B,WAAYpB,EAAMO,YAAYb,OAEhC2B,SAAU,CACR3B,MAAOM,EAAMU,YAAYhB,MACzB0B,WAAYpB,EAAME,SAASR,OAE7B6B,MAAO,CACL7B,MAAOM,EAAMM,gBAAgBZ,QAGjC+B,MAAO,CACL/B,MAAOM,EAAMM,gBAAgBZ,MAC7B0B,WAAYpB,EAAMM,gBAAgBZ,OAEpCgC,MAAO,CACLC,QAAQ,CACNjC,MAAOM,EAAME,SAASR,MACtB0B,WAAYpB,EAAME,SAASR,OAE7B+B,MAAM,CACJL,WAAYpB,EAAMG,SAAST,OAE7BkC,QAAQ,CACNR,WAAYpB,EAAMC,SAASP,OAE7BmC,SAAU,CACRT,WAAYpB,EAAMG,SAAST,SCzE3BP,EAAc,CAElBC,MAAO,GACPC,OAAQ,GACRC,MAAO,KAKHwC,EAAejE,IAAOkE,MAAV,wbAEP,SAACzD,GAAD,OAAWA,EAAMmB,QAMN,SAACnB,GACnB,OAAO2C,EAAQC,cAAc5C,EAAM0D,WAAWZ,cAEvC,SAAC9C,GACR,OAAO2C,EAAQC,cAAc5C,EAAM0D,WAAWtC,SAe5CuC,E,4JACJ,WACE,MAAgC5D,KAAKC,MAA9B6C,EAAP,EAAOA,OAAQe,EAAf,EAAeA,KAAMC,EAArB,EAAqBA,QACf1C,EAAON,EAAYd,KAAKC,MAAMmB,MACpC,OACI,cAACqC,EAAD,CACErC,KAAMA,EACNX,KAAK,SACLsD,MAAOF,EACPF,UAAYb,EAAS,SAAW,WAChCgB,QAASA,Q,GAVEnD,IAAMC,WA2B3BgD,EAAOlC,aAAe,CACpBsC,OAAO,EACP5C,KAAM,SACNyC,KAAM,SAIRD,EAAOpC,KAAS,CACZtB,MAAO,UACPC,UAAW,cAAC,EAAD,CAAQ2D,QAAS,eAC5B7D,MAAO,CACL,CACEM,KAAM,SACNkB,IAAK,SACLjB,YAAa,mCACbC,KAAM,UACNC,aAAcuD,OAAOL,EAAOlC,aAAasC,QAE3C,CACEzD,KAAM,OACNkB,IAAK,OACLjB,YAAa,iCACbC,KAAM,SACNC,aAAckD,EAAOlC,aAAaN,MAEpC,CACEb,KAAM,OACNkB,IAAK,OACLjB,YAAa,oCACbC,KAAM,SACNC,aAAckD,EAAOlC,aAAamC,MAEpC,CACEtD,KAAM,UACNkB,IAAK,UACLjB,YAAa,qCACbC,KAAM,WACNC,aAAc,UAKPkD,I,IAAAA,ICzGTM,EAAc,CAClBnD,MAAO,OACPC,OAAQ,MACRC,MAAO,SAGHvB,EAAYF,IAAOC,IAAV,+GAEA,SAACQ,GAAD,OAAWA,EAAMmB,QACrB,SAACnB,GACR,OAAO2C,EAAQK,aAAahD,EAAM0D,WAAWtC,QAE3BuB,EAAQS,MAAME,QAAQR,YAGtCoB,EAAQ3E,IAAO2B,KAAV,gEAEAyB,EAAQK,aAAaC,MAAM7B,OAGhC+C,E,4JACJ,WAEE,MAAyCpE,KAAKC,MAAtCoE,EAAR,EAAQA,QAASnB,EAAjB,EAAiBA,MAAOJ,EAAxB,EAAwBA,OAAQ1B,EAAhC,EAAgCA,KAC1BkD,EAAWJ,EAAY9C,GAGvBmD,EAAOC,KAAKC,MAAMJ,EAAO,MACzBK,EAAMF,KAAKC,MAAMJ,EAAO,KAAe,IACvCM,EAAMH,KAAKC,MAAMJ,EAAO,KAAe,IAC7C,OACE,eAAC,EAAD,CACEjD,KAAMkD,EACNX,UAAWb,EAAS,SAAW,WAFjC,WAIIA,GAAUI,GAAS,cAACiB,EAAD,UAAQjB,KAC3B,KAAOqB,GAAMK,OAAO,GALxB,KAOI,KAAOF,GAAKE,OAAO,GAPvB,KASI,KAAOD,GAAKC,OAAO,U,GApBHjE,IAAMC,WAqChCwD,EAAY1C,aAAe,CACzB2C,QAAS,EACTnB,MAAO,OACP9B,KAAM,SACN0B,QAAQ,GAIVsB,EAAY5C,KAAS,CACjBtB,MAAO,gBACPC,UAAW,cAAC,EAAD,IACXF,MAAO,CACL,CACEM,KAAM,UACNkB,IAAK,UACLjB,YAAa,4BACbC,KAAM,UACNC,aAAc0D,EAAY1C,aAAa2C,SAEzC,CACE9D,KAAM,QACNkB,IAAK,QACLjB,YAAa,kCACbC,KAAM,SACNC,aAAc0D,EAAY1C,aAAawB,OAEzC,CACE3C,KAAM,SACNkB,IAAK,SACLjB,YAAa,yCACbC,KAAM,UACNC,aAAcuD,OAAOG,EAAY1C,aAAaoB,SAEhD,CACEvC,KAAM,OACNkB,IAAK,OACLjB,YAAa,uBACbC,KAAM,SACNC,aAAc0D,EAAY1C,aAAaN,QAKhCgD,I,MAAAA,KCpGTvD,GAAgB+B,EAAQQ,MAAML,WAE9B8B,GAAiBrF,IAAOC,IAAV,kJAKEmD,EAAQS,MAAMD,MAAML,YAGpC+B,GAActF,IAAOkE,MAAV,4OAMNd,EAAQQ,MAAM/B,MACHR,IAMhBkE,GAAcvF,IAAO0D,MAAV,4EAENN,EAAQQ,MAAM/B,OAInB2D,G,4JACJ,WACE,MAA+ChF,KAAKC,MAA7C8D,EAAP,EAAOA,MAAOkB,EAAd,EAAcA,SAAUC,EAAxB,EAAwBA,KAAMhC,EAA9B,EAA8BA,MAAOiC,EAArC,EAAqCA,OACrC,OACE,eAACN,GAAD,WACE,eAACE,GAAD,CACEK,QAASF,EADX,UAGGhC,EAHH,OAMA,cAAC4B,GAAD,CACEO,GAAIH,EACJA,KAAMA,EACNzE,KAAK,SACLiE,IAAI,IACJY,IAAKH,EACLF,SAAUA,EACVlB,MAAOA,EAAQ,EAAIA,EAAQ,Y,GAlBjBpD,IAAMC,WAsC1BoE,GAAMtD,aAAe,CACnBwD,KAAM,QACNhC,MAAO,QACPa,WAAOwB,EACPJ,OAAQ,OAKVH,GAAMxD,KAAS,CACXtB,MAAO,SACPC,UAAW,cAAC,GAAD,CAAQ8E,SAAU,eAC7BhF,MAAO,CACL,CACEM,KAAM,OACNkB,IAAK,OACLjB,YAAa,sBACbC,KAAM,SACNC,aAAcsE,GAAMtD,aAAawD,MAEnC,CACE3E,KAAM,QACNkB,IAAK,QACLjB,YAAa,wBACbC,KAAM,SACNC,aAAcsE,GAAMtD,aAAawB,OAEnC,CACE3C,KAAM,QACNkB,IAAK,QACLjB,YAAa,uBACbC,KAAM,0BACNC,aAAc,QAEhB,CACEH,KAAM,SACNkB,IAAK,SACLjB,YAAa,uBACbC,KAAM,SACNC,aAAcsE,GAAMtD,aAAayD,QAEnC,CACE5E,KAAM,WACNkB,IAAK,WACLjB,YAAa,+BACbC,KAAM,WACNC,aAAc,UAKPsE,I,SAAAA,MCtHTlE,GAEI,GAFJA,GAGG,GAGHpB,GAAYF,IAAOC,IAAV,uDACOmD,EAAQS,MAAME,QAAQR,YAGtCyC,GAAQhG,IAAO2B,KAAV,wQACA,SAAClB,GAAD,OAAWA,EAAMmB,QAChB,SAACnB,GAAD,OAAWA,EAAMmB,QACP,SAACnB,GACnB,OAAO2C,EAAQO,eAAelD,EAAM0D,WAAWZ,cAExC,SAAC9C,GACR,OAAO2C,EAAQO,eAAelD,EAAM0D,WAAWtC,SAU7CoE,GAAajG,IAAOC,IAAV,uLAMHmD,EAAQO,eAAeD,MAAM7B,OAKpCqE,G,4JACJ,WAEE,MAAgC1F,KAAKC,MAA7B0F,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SACbC,EAAOC,MAAMC,KAAKD,MAAMH,IAAY,SAACK,EAAEC,GAAH,OAAOA,EAAE,KAAG5F,KAAI,SAAA4F,GACxD,IAAMC,EAAcD,IAAML,EAC1B,OACE,cAACJ,GAAD,CACEpE,KAAM8E,EAAapF,GAAoBA,GACvC6C,UAAWuC,EAAa,SAAW,WAFrC,SAKGA,GAAcN,GAFVK,MAOX,OACE,cAAC,GAAD,UACE,cAACR,GAAD,UACGI,U,GApBiBlF,IAAMC,WAkClC8E,GAAchE,aAAe,CAC3BkE,SAAU,EACVD,UAAW,GAIbD,GAAclE,KAAS,CACnBtB,MAAO,kBACPC,UAAW,cAAC,GAAD,IACXF,MAAO,CACL,CACEM,KAAM,YACNkB,IAAK,YACLjB,YAAa,6BACbC,KAAM,SACNC,aAAcgF,GAAchE,aAAaiE,WAE3C,CACEpF,KAAM,WACNkB,IAAK,WACLjB,YAAa,kCACbC,KAAM,SACNC,aAAcgF,GAAchE,aAAakE,YAKlCF,I,GAAAA,MCpGFS,GAEF,UAFEA,GAGF,UAHEA,GAIJ,QCEFzG,GAAYF,IAAOC,IAAV,6GAMT2G,G,6JAGJ,SAAQC,GACN,OAAQA,GACN,KAAKF,GACL,KAAKA,GACJ,MAAO,QAGR,QACC,MAAO,W,oBAIZ,WACE,MAAmCnG,KAAKC,MAAjC6D,EAAP,EAAOA,QAASwC,EAAhB,EAAgBA,QAASD,EAAzB,EAAyBA,OACzB,OACE,eAAC,GAAD,WACE,cAAC,EAAD,CACEjF,KAAK,QACL0B,QAAQ,EACRe,KAAK,QACLC,QAASwC,IAEV,cAAC,EAAD,CACElF,KAAK,QACL0B,QAAQ,EACRe,KAAM7D,KAAKuG,QAAQF,GACnBvC,QAASA,W,GA7BMnD,IAAMC,WA6ChCwF,GAAY1E,aAAe,CACzB2E,OAAQF,IAGVC,GAAY5E,KAAS,CACjBtB,MAAO,eACPC,UAAW,cAAC,GAAD,CAAc2D,QAAS,eAClC7D,MAAO,CACL,CACEM,KAAM,UACNkB,IAAK,UACLjB,YAAa,uCACbC,KAAM,WACNC,aAAc,QAEhB,CACEH,KAAM,UACNkB,IAAK,UACLjB,YAAa,qCACbC,KAAM,WACNC,aAAc,QAEhB,CACEH,KAAM,SACNkB,IAAK,SACLjB,YAAa,sBACbC,KAAM,SACNC,aAAc0F,GAAY1E,aAAa2E,UAKhCD,I,YAAAA,MC9ETvF,GAAgB+B,EAAQS,MAAMC,QAAQP,WAEtCyD,GAAahH,IAAOC,IAAV,4RAOMoB,GACX+B,EAAQS,MAAMC,QAAQjC,OAG3BoF,GAAkBjH,IAAOC,IAAV,uKACVmD,EAAQS,MAAMD,MAAM/B,MACTuB,EAAQS,MAAMD,MAAML,YAOnC2D,GAAmBlH,IAAOC,IAAV,yKACAmD,EAAQS,MAAME,QAAQR,YAOtC4D,GAAoBnH,IAAOC,IAAV,oFACDmD,EAAQS,MAAMG,SAAST,YAIxC6D,G,4JACJ,WACE,MAAwE5G,KAAKC,MAAtE4G,EAAP,EAAOA,OAAQC,EAAf,EAAeA,aAAcC,EAA7B,EAA6BA,cAAejD,EAA5C,EAA4CA,QAASwC,EAArD,EAAqDA,QAASD,EAA9D,EAA8DA,OAC9D,OACE,eAACG,GAAD,WACC,cAACC,GAAD,UACGI,IAEH,eAACH,GAAD,WACGI,EACAC,KAEH,cAACJ,GAAD,UACE,cAAC,GAAD,CACEN,OAAQA,EACRvC,QAASA,EACTwC,QAASA,a,GAhBA3F,IAAMC,WAuC1BgG,GAAMlF,aAAe,CAClB2E,OAAQF,IAIXS,GAAMpF,KAAS,CACXtB,MAAO,SACPC,UAAW,cAAC,GAAD,CAAO2D,QAAS,eAC3B7D,MAAO,CACL,CACEM,KAAM,SACNkB,IAAK,SACLjB,YAAa,4BACbC,KAAM,UACNC,aAAc,QAEhB,CACEH,KAAM,eACNkB,IAAK,eACLjB,YAAa,mCACbC,KAAM,iBACNC,aAAc,QAEhB,CACEH,KAAM,eACNkB,IAAK,eACLjB,YAAa,mCACbC,KAAM,iBACNC,aAAc,QAEhB,CACEH,KAAM,UACNkB,IAAK,UACLjB,YAAa,uCACbC,KAAM,WACNC,aAAc,QAEhB,CACEH,KAAM,UACNkB,IAAK,UACLjB,YAAa,qCACbC,KAAM,WACNC,aAAc,QAEhB,CACEH,KAAM,SACNkB,IAAK,SACLjB,YAAa,sBACbC,KAAM,SACNC,aAAckG,GAAMlF,aAAa2E,UAK1BO,I,eAAAA,MChIVI,GAAU,CAACzF,EAAS6C,GAAaY,GAAOU,GAAe9B,EAAQwC,GAAaQ,IAE5ElH,GAAYF,IAAOC,IAAV,4FAMTE,GAAQH,IAAOC,IAAV,kDAILI,G,4JACJ,WAEE,IAAMoH,EAAaD,GAAQ3G,KAAI,SAAA6G,GAC7B,MAAuBA,EAAS1F,KAAzBtB,EAAP,EAAOA,MAAOD,EAAd,EAAcA,MACd,OACE,cAAC,EAAD,CAEEC,MAAQA,EACRC,UAAW,cAAC+G,EAAD,IACX9G,SAAUH,GAHLC,MAOX,OACE,cAAC,GAAD,UACE,gCACE,cAAC,GAAD,4BACC+G,W,GAlBiBtG,IAAMC,WAyBnBf,MCWAsH,G,kDAvDb,WAAYlH,GAAQ,IAAD,8BACjB,cAAMA,IAORgF,SAAW,SAACmC,GACV,IAAMC,EAAMC,SAASF,EAAMG,OAAOxD,OAClC,EAAKyD,SAAS,CAACnD,QAASgD,EAAM,EAAIA,EAAM,KARxC,EAAKI,MAAQ,CACXpD,QAAS,EACTqD,UAAW,GAJI,E,0CAanB,WACE,MAA6B1H,KAAKyH,MAA3BpD,EAAP,EAAOA,QAASqD,EAAhB,EAAgBA,UAEVb,EAAS,CACV,cAAC,GAAD,CACC5B,SAAUjF,KAAKiF,SACf/B,MAAM,cACNgC,KAAK,UACLnB,MAAOM,KAIPyC,EAAe,CACnB,cAAC,GAAD,CACE5D,MAAM,GACNmB,QAASA,EACTvB,QAAQ,IAEV,cAAC,GAAD,CACEuB,QAASqD,EACTtG,KAAK,QACL0B,QAAQ,KAIZ,OACE,8BACE,cAAC,GAAD,CACIgE,aAAcA,EACda,WA3BW,YA4BXtD,QAASA,EACTqD,UAAWA,EACXb,OAAQA,U,GA9CIlG,IAAMC,WCsDfgH,G,kDArDb,WAAY3H,GAAQ,IAAD,8BACjB,cAAMA,IAORgF,SAAW,SAACmC,GACV,IAAMC,EAAMC,SAASF,EAAMG,OAAOxD,OAClC,EAAKyD,SACH,CAACnD,QAASgD,EAAM,EAAIA,EAAM,EAC1BK,UAAWL,EAAM,EAAIA,EAAM,KAV7B,EAAKI,MAAQ,CACXpD,QAAS,EACTqD,UAAW,GAJI,E,0CAgBnB,WACE,MAA6B1H,KAAKyH,MAA3BpD,EAAP,EAAOA,QAASqD,EAAhB,EAAgBA,UAEVb,EAAS,CACV,cAAC,GAAD,CACC5B,SAAUjF,KAAKiF,SACf/B,MAAM,UACNgC,KAAK,UACLnB,MAAOM,KAIPyC,EAAe,CACnB,cAAC,GAAD,CACEzC,QAASqD,EACTtG,KAAK,QACL0B,QAAQ,KAIZ,OACE,8BACE,cAAC,GAAD,CACI6E,WArBW,YAsBXtD,QAASA,EACTqD,UAAWA,EACXb,OAAQA,EACRC,aAAcA,U,GA5CFnG,IAAMC,WCuFfiH,G,kDApFb,WAAY5H,GAAQ,IAAD,8BACjB,cAAMA,IAURgF,SAAW,SAACmC,GACV,IAAMC,EAAMC,SAASF,EAAMG,OAAOxD,OAClC,EAAKyD,SACH,CAACnD,QAASgD,EAAM,EAAIA,EAAM,EAC1BK,UAAWL,EAAM,EAAIA,EAAM,KAb7B,EAAKI,MAAQ,CACXK,SAAU,EACVC,OAAO,EACPC,OAAQ,EACRpC,SAAU,EACVS,OAAQF,IAPO,E,kDAmBnB,c,4BAIA,c,oBAIA,WACE,MAAkDnG,KAAKyH,MAA/CK,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OAAQnC,EAA1B,EAA0BA,SAAU8B,EAApC,EAAoCA,UAE9Bb,EAAS,CACZ,cAAC,GAAD,CACC5B,SAAUjF,KAAKiF,SACf/B,MAAM,UACNgC,KAAK,OACLnB,MAAO+D,GACH,KAEL,cAAC,GAAD,CACC7C,SAAUjF,KAAKiF,SACf/B,MAAM,SACNgC,KAAK,SACLnB,MAAOgE,GACH,MAIFjB,EAAe,CACnB,cAAC,GAAD,CACEzC,QAASyD,EAEThF,QAAQ,GADJ,KAGN,cAAC,GAAD,CACEuB,QAASqD,EACTtG,KAAK,QAEL0B,QAAQ,GADJ,MAIFiE,EAAgB,CACpB,cAAC,GAAD,CACEpB,UAAW,EACXC,SAAUA,GAAY,KAI1B,OACE,8BACE,cAAC,GAAD,CACI+B,WAzCW,KA0CXtD,QAASyD,EACTJ,UAAWA,EACXX,cAAeA,EACfF,OAAQA,EACRC,aAAcA,EACdR,QAAStG,KAAKsG,QACdxC,QAAS9D,KAAK8D,gB,GA9ETnD,IAAMC,WCoFRqH,G,kDAnFb,WAAYhI,GAAQ,IAAD,8BACjB,cAAMA,IAWRgF,SAAW,SAACmC,GACV,IAAMC,EAAMC,SAASF,EAAMG,OAAOxD,OAClC,EAAKyD,SACH,CAACnD,QAASgD,EAAM,EAAIA,EAAM,EAC1BK,UAAWL,EAAM,EAAIA,EAAM,KAd7B,EAAKI,MAAQ,CACXK,SAAU,EACVI,SAAU,EACVH,OAAO,EACPC,OAAQ,EACRpC,SAAU,EACVS,OAAQF,IARO,E,0CAoBnB,WACE,MAAkEnG,KAAKyH,MAAhEK,EAAP,EAAOA,SAAUI,EAAjB,EAAiBA,SAAUH,EAA3B,EAA2BA,OAAQnC,EAAnC,EAAmCA,SAAU8B,EAA7C,EAA6CA,UAAWrB,EAAxD,EAAwDA,OAGlDhC,EAAWgC,IAAWF,GAAiB+B,EAAWJ,EAClD5E,EAAQmD,IAAWF,GAAiB,OAAS,OAC7CU,EAAS,CACV,cAAC,GAAD,CACC5B,SAAUjF,KAAKiF,SACf/B,MAAM,eACNgC,KAAK,OACLnB,MAAO+D,IAET,cAAC,GAAD,CACC7C,SAAUjF,KAAKiF,SACf/B,MAAM,eACNgC,KAAK,OACLnB,MAAOmE,IAET,cAAC,GAAD,CACCjD,SAAUjF,KAAKiF,SACf/B,MAAM,SACNgC,KAAK,SACLnB,MAAOgE,KAILjB,EAAe,CACnB,cAAC,GAAD,CACE5D,MAAOA,EACPmB,QAASA,EAETvB,QAAQ,GADJ,KAGN,cAAC,GAAD,CACEI,MAAM,IACNmB,QAASqD,EACTtG,KAAK,QACL0B,QAAQ,KAGNiE,EAAgB,CACpB,cAAC,GAAD,CACEpB,UAAWoC,GAAU,EACrBnC,SAAUA,GAAY,KAI1B,OACE,8BACE,cAAC,GAAD,CACI+B,WAjDW,SAkDXtD,QAASA,EACTqD,UAAWA,EACXb,OAAQA,EACRC,aAAcA,EACdC,cAAeA,U,GA7ENpG,IAAMC,WCDrBuH,GAAS3I,IAAOC,IAAV,mGAMN2I,GAAQ5I,IAAOC,IAAV,4FAML4I,GAAa7I,IAAOC,IAAV,4BAsBD6I,I,GAAAA,GApBf,WACE,IAAMC,EAAS,CACb,CAAErI,MAAO,YAAasI,EAAG,cAAC,GAAD,KACzB,CAAEtI,MAAO,YAAasI,EAAG,cAAC,GAAD,KACzB,CAAEtI,MAAO,KAAMsI,EAAG,cAAC,GAAD,KAClB,CAAEtI,MAAO,SAAUsI,EAAG,cAAC,GAAD,MAGxB,OACE,cAACL,GAAD,UACGI,EAAOlI,KAAI,SAACoI,GAAD,OACV,eAACL,GAAD,WACE,cAACC,GAAD,UAAaI,EAAMvI,QAClBuI,EAAMD,WC5BX9I,GAAYF,IAAOC,IAAV,qOAoCA6I,OA3Bf,WACE,OACE,cAAC,GAAD,UACE,eAAC,IAAD,WACE,8BACE,+BACE,6BACE,cAAC,IAAD,CAAMI,GAAG,IAAT,sBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,QAAT,kCAIN,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,QAAZ,SACE,cAACC,GAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,IAAZ,SACE,cAACE,GAAD,eC9BZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.90fdf69b.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  border: 1px solid #121212;\n  margin: 20px 0px;\n`;\n\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 20px;\n  font-size: 1.3rem;\n`;\n\nconst RenderComponent = styled.div`\n  padding: 25px;\n  display: flex;\n  align-items: center;\n  flex-grow: 1;\n`;\n\nconst Documentation = styled.table`\n  flex-grow: 1;\n`;\n\nclass DocumentComponent extends React.Component {\n  render() {\n    return (\n      <Wrapper>\n        <Title>{this.props.title}</Title>\n        <Container>\n          <RenderComponent>{this.props.component}</RenderComponent>\n          <Documentation>\n            <tr>\n              <th>Prop</th>\n              <th>Description</th>\n              <th>Type</th>\n              <th>Default value</th>\n            </tr>\n            {this.props.propDocs.map((doc) => {\n              return (\n                <tr>\n                  <td>{doc.prop}</td>\n                  <td>{doc.description}</td>\n                  <td>{doc.type}</td>\n                  <td>\n                    <code>{doc.defaultValue}</code>\n                  </td>\n                </tr>\n              );\n            })}\n          </Documentation>\n        </Container>\n      </Wrapper>\n    );\n  }\n}\n\nexport default DocumentComponent;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst primaryColor = \"#ffa2bf\";\n\nconst sizeMapping = {\n  small: 10,\n  medium: 14,\n  large: 20,\n};\n\nconst Container = styled.div`\n  animation: spin 1.5s linear infinite;\n\n  @-moz-keyframes spin {\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst Dot = styled.span`\n  display: block;\n  width: ${(props) => props.size}px;\n  height: ${(props) => props.size}px;\n  background-color: ${(props) => props.color};\n  border-radius: 100%;\n  transform: scale(0.75);\n  transform-origin: 50% 50%;\n  opacity: 0.3;\n  animation: wobble 1s ease-in-out infinite;\n\n  @keyframes wobble {\n    0% {\n      border-radius: 25%;\n    }\n    100% {\n      border-radius: 100%;\n    }\n  }\n`;\n\nconst DotGroup = styled.div`\n  display: flex;\n`;\n\nclass Loading extends React.Component {\n  render() {\n    const size = sizeMapping[this.props.size];\n    const { color } = this.props;\n\n    return (\n      <Container>\n        <DotGroup>\n          <Dot size={size} color={color} />\n          <Dot size={size} color={color} />\n        </DotGroup>\n        <DotGroup>\n          <Dot size={size} color={color} />\n          <Dot size={size} color={color} />\n        </DotGroup>\n      </Container>\n    );\n  }\n}\n\n// Class description for the docs\nLoading.docs =   {\n    title: 'Loading spinner ',\n    component: <Loading />,\n    props: [\n      {\n        prop: 'size',\n        key: 'size',\n        description: \"Changes the size of the loading spinner\",\n        type: \"string\",\n        defaultValue: \"medium\",\n      },\n      {\n        prop: 'color',\n        key: 'color',\n        description: \"Changes the color of the loading spinner\",\n        type: \"string\",\n        defaultValue: primaryColor,\n      }\n    ]\n}\n\nLoading.propTypes = {\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  color: PropTypes.string,\n};\n\nLoading.defaultProps = {\n  size: \"medium\",\n  color: primaryColor,\n};\n\nexport default Loading;\n","/* CSS - Cascading Style Sheet */\n/* Palette color codes */\n/* Palette URL: http://paletton.com/#uid=34h0r1klhllaDvZfYqDqyg2vUaIklhllaDvZfYqDqyg2vUaIklhllaDvZfYqDqyg2vUaI */\n/* Feel free to copy&paste color codes to your application */\n/* As hex codes */\nconst COLOR = {\n  primary0: { color: '#433075' },\t/* Main Primary color */\n  primary1: { color: '#897BAF' },\n  primary2: { color: '#635192' },\n  primary3: { color: '#291758' },\n  primary4: { color: '#15073B' },\n  primaryLightest: {color: '#B8AFCF'},\n\n  secondary10: { color: '#AAAA39' },\t/* Main Secondary color (1) */\n  secondary11: { color: '#FFFFAA' },\n  secondary12: { color: '#D4D46A' },\n  secondary13: { color: '#808016' },\n  secondary14: { color: '#555500' },\n\n  secondary20: { color: '#AA8839' },\t/* Main Secondary color (2) */\n  secondary21: { color: '#FFE5AA' },\n  secondary22: { color: '#D4B56A' },\n  secondary23: { color: '#806016' },\n  secondary24: { color: '#553C00' },\n};\n\nconst GENERIC = {\n  COLOR,\n  BUTTON_COLORS:{\n    active: {\n      color: COLOR.primary4.color,\n      background: COLOR.secondary22.color,\n    },\n    inactive: {\n      color: COLOR.secondary21.color,\n      background: COLOR.primary3.color\n    },\n  },\n  DISPLAY_TIME: {\n    label: {\n      color: COLOR.primaryLightest.color,\n    },\n    active: {\n      color: COLOR.secondary11.color,\n    },\n    inactive: {\n      color: COLOR.secondary10.color,\n    },\n  },\n  DISPLAY_ROUNDS: {\n    active: {\n      color: COLOR.primary4.color,\n      background: COLOR.secondary10.color,\n    },\n    inactive: {\n      color: COLOR.secondary13.color,\n      background: COLOR.primary1.color,\n    },\n    label: {\n      color: COLOR.primaryLightest.color,\n    }\n  },\n  INPUT: {\n    color: COLOR.primaryLightest.color,\n    background: COLOR.primaryLightest.color,\n  },\n  PANEL: {\n    DEFAULT:{\n      color: COLOR.primary1.color,\n      background: COLOR.primary1.color,\n    },\n    INPUT:{\n      background: COLOR.primary2.color,\n    },\n    DISPLAY:{\n      background: COLOR.primary0.color,\n    },\n    CONTROLS: {\n      background: COLOR.primary2.color,\n    },\n  }\n}\n\nexport default GENERIC;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport GENERIC  from \"../../shared/COLOR\";\n\nconst sizeMapping = {\n  // In pixels\n  small: 60,\n  medium: 80,\n  large: 100,\n};\n\n// Make rounded corner button, but not as round as the RoundsDisplay\n// Add different style for hover and active (click) to emphasize user action\nconst ButtonStyled = styled.input`\n  display: block;\n  width: ${(props) => props.size}px;\n  height: 60px;\n  margin: 7px;\n  text-align: center;\n  font-size: .9em;\n  text-decoration: none;\n  background-color: ${(props) => {\n    return GENERIC.BUTTON_COLORS[props.activeKey].background\n  }};\n  color: ${(props) => {\n    return GENERIC.BUTTON_COLORS[props.activeKey].color\n  }};\n  border: none;\n  border-radius: 10px;\n  &:hover {\n        outline: none;\n        box-shadow: 0px 0px 6px black;\n    };\n  &:active {\n        outline: none;\n        box-shadow: 0px 0px 2px red;\n        opacity: 0.8;\n    };\n`;\n\nclass Button extends React.Component {\n  render() {\n    const {active, text, onClick} = this.props;\n    const size = sizeMapping[this.props.size];\n    return (\n        <ButtonStyled\n          size={size}\n          type=\"Button\"\n          value={text}\n          activeKey={ active ? 'active' : 'inactive' }\n          onClick={onClick}\n        />\n    );\n  }\n};\n\nButton.propTypes = {\n  // Indicates if this is a primary or secondary button\n  active: PropTypes.bool,\n  // The relative size of the button to display\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  // The text to display in the button\n  text: PropTypes.string,\n  // The call back to use when the button is clicked\n  onClick: PropTypes.func.isRequired,\n};\n\nButton.defaultProps = {\n  actve: true,\n  size: 'medium',\n  text: 'Press',\n};\n\n// Class description for the docs\nButton.docs =   {\n    title: 'Button ',\n    component: <Button onClick={()=>{}} />,\n    props: [\n      {\n        prop: 'active',\n        key: 'active',\n        description: 'Wether this is the active button',\n        type: 'boolean',\n        defaultValue: String(Button.defaultProps.actve),\n      },\n      {\n        prop: 'size',\n        key: 'size',\n        description: \"Changes the size of the button\",\n        type: \"string\",\n        defaultValue: Button.defaultProps.size,\n      },\n      {\n        prop: 'text',\n        key: 'text',\n        description: 'The text to display on the button',\n        type: 'string',\n        defaultValue: Button.defaultProps.text,\n      },\n      {\n        prop: 'onClick',\n        key: 'onClick',\n        description: 'Callback for click event on button',\n        type: 'function',\n        defaultValue: 'none',\n      }\n    ]\n};\n\nexport default Button;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport GENERIC  from \"../../shared/COLOR\";\n\nconst fontSizeMap = {\n  small: '.8em',\n  medium: '1em',\n  large: '3.4em',\n};\n\nconst Container = styled.div`\n  text-align: center;\n  font-size: ${(props) => props.size};\n  color: ${(props) => {\n    return GENERIC.DISPLAY_TIME[props.activeKey].color\n  }};\n  background-color: ${GENERIC.PANEL.DISPLAY.background};\n`;\n\nconst Label = styled.span`\n  margin-right: 5px;\n  color: ${GENERIC.DISPLAY_TIME.label.color};\n`;\n\nclass DisplayTime extends React.Component {\n  render() {\n    // const seconds = 7446; //2hr, 4 min, 6 secs\n    const { seconds, label, active, size } = this.props;\n    const textSize = fontSizeMap[size];\n    // TODO: Move this to Utils area?\n    // Split the seconds into Hour :  Min : Sec\n    const hour = Math.floor(seconds / (60 * 60));\n    const min = Math.floor(seconds % (60 * 60) / 60);\n    const sec = Math.floor(seconds % (60 * 60) % 60);\n    return (\n      <Container\n        size={textSize}\n        activeKey={active ? 'active' : 'inactive'}\n      >\n        {!active && label && <Label>{label}</Label>}\n        {('00' + hour).slice(-2)}\n        :\n        {('00' + min).slice(-2)}\n        :\n        {('00' + sec).slice(-2)}\n      </Container >\n    );\n  }\n};\n\nDisplayTime.propTypes = {\n  // The number of seconds to display\n  seconds: PropTypes.number,\n  // The label to display before the time display\n  label: PropTypes.string,\n  // The relative display size to use\n  size: PropTypes.string,\n  // Wether this is the a primary display or secondary\n  active: PropTypes.bool,\n};\n\nDisplayTime.defaultProps = {\n  seconds: 0,\n  label: 'Work',\n  size: 'medium',\n  active: false,\n};\n\n// Class description for the docs\nDisplayTime.docs =   {\n    title: 'Display Time ',\n    component: <DisplayTime />,\n    props: [\n      {\n        prop: 'seconds',\n        key: 'seconds',\n        description: \"Changes the time diplayed\",\n        type: \"integer\",\n        defaultValue: DisplayTime.defaultProps.seconds,\n      },\n      {\n        prop: 'label',\n        key: 'label',\n        description: 'Optional label for display time',\n        type: 'string',\n        defaultValue: DisplayTime.defaultProps.label,\n      },\n      {\n        prop: 'active',\n        key: 'active',\n        description: 'Wether this is the active time display',\n        type: 'boolean',\n        defaultValue: String(DisplayTime.defaultProps.active),\n      },\n      {\n        prop: 'size',\n        key: 'size',\n        description: 'Size of display time',\n        type: 'string',\n        defaultValue: DisplayTime.defaultProps.size,\n      }\n    ]\n}\n\nexport default DisplayTime;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport GENERIC  from \"../../shared/COLOR\";\n\nconst primaryColor =  GENERIC.INPUT.background;\n\nconst InputContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  width: 330px;\n  background-color: ${GENERIC.PANEL.INPUT.background};\n`;\n\nconst InputStyled = styled.input`\n  flex: 1;\n  padding: 5px 10px;\n  width: 80px;\n  text-align: left;\n  text-decoration: none;\n  color: ${GENERIC.INPUT.color};\n  background-color: ${primaryColor};\n  border-width: medium;\n  border-radius: 20px;\n  margin-left: 10px;\n`;\n\nconst LabelStyled = styled.label`\n  flex: 1;\n  color: ${GENERIC.INPUT.color};\n  text-align: right;\n`;\n\nclass Input extends React.Component {\n  render() {\n    const {value, onChange, name, label, maxNum} = this.props;\n    return (\n      <InputContainer>\n        <LabelStyled\n          htmlFor={name}\n        >\n          {label}\n          :\n        </LabelStyled>\n        <InputStyled\n          id={name}\n          name={name}\n          type=\"number\"\n          min=\"0\"\n          max={maxNum}\n          onChange={onChange}\n          value={value > 0 ? value : \"\"}\n        />\n      </InputContainer>\n    )\n  }\n};\n\nInput.propTypes = {\n  // The input element name identifier to use\n  name: PropTypes.string,\n  // The display text to use for the input\n  label: PropTypes.string,\n  // The value to display in the input\n  value: PropTypes.number,\n  // The max number allowed in the input\n  maxNum: PropTypes.number,\n  // The callback to use when the input changes\n  onChange: PropTypes.func.isRequired,\n};\n\nInput.defaultProps = {\n  name: 'Input',\n  label: 'Input',\n  value: undefined,\n  maxNum: 86400, // 24 hours\n};\n\n\n// Class description for the docs\nInput.docs =   {\n    title: 'Input ',\n    component: <Input  onChange={()=>{}} />,\n    props: [\n      {\n        prop: 'name',\n        key: 'name',\n        description: 'Name of input field',\n        type: 'string',\n        defaultValue: Input.defaultProps.name,\n      },\n      {\n        prop: 'label',\n        key: 'label',\n        description: 'label for input field',\n        type: 'string',\n        defaultValue: Input.defaultProps.label,\n      },\n      {\n        prop: 'value',\n        key: 'value',\n        description: 'Value of input field',\n        type: 'number from 0 to maxNum',\n        defaultValue: 'none',\n      },\n      {\n        prop: 'maxNum',\n        key: 'maxNum',\n        description: 'Maximum input number',\n        type: 'number',\n        defaultValue: Input.defaultProps.maxNum,\n      },\n      {\n        prop: 'onChange',\n        key: 'onChange',\n        description: \"Callback for change of input\",\n        type: \"function\",\n        defaultValue: 'none',\n      }\n    ]\n}\n\nexport default Input;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport GENERIC  from \"../../shared/COLOR\";\n\nconst sizeMapping = {\n  small: 20,\n  medium: 40,\n  large: 60,\n};\n\nconst Container = styled.div`\n  background-color: ${GENERIC.PANEL.DISPLAY.background};\n`;\n\nconst Round = styled.span`\n  width: ${(props) => props.size}px;\n  height: ${(props) => props.size}px;\n  background-color: ${(props) => {\n    return GENERIC.DISPLAY_ROUNDS[props.activeKey].background\n  }};\n  color: ${(props) => {\n    return GENERIC.DISPLAY_ROUNDS[props.activeKey].color\n  }};\n  border-radius: 100%;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  transform: scale(0.75);\n  transform-origin: 50% 50%;\n`;\n\nconst RoundGroup = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  &:before {\n    content: \"Round\";\n    color: ${GENERIC.DISPLAY_ROUNDS.label.color};\n    padding-right:10px;\n  }\n`;\n\nclass DisplayRounds extends React.Component {\n  render() {\n    // construct the round row\n    const { numRounds, curRound } = this.props;\n    const dots = Array.from(Array(numRounds), (e,i)=>i+1).map(i => {\n      const isCurRound = (i === curRound);\n      return (\n        <Round\n          size={isCurRound ? sizeMapping.large : sizeMapping.medium}\n          activeKey={isCurRound ? 'active' : 'inactive'}\n          key={i}\n        >\n          {isCurRound && curRound}\n        </Round>\n      );\n    })\n\n    return (\n      <Container>\n        <RoundGroup>\n          {dots}\n        </RoundGroup>\n      </Container>\n    );\n  }\n};\n\nDisplayRounds.propTypes = {\n  // The number of rounds to display\n  numRounds: PropTypes.number,\n  // The round that is active\n  curRound: PropTypes.number,\n};\n\nDisplayRounds.defaultProps = {\n  curRound: 3,\n  numRounds: 4,\n};\n\n// Class description for the docs\nDisplayRounds.docs =   {\n    title: 'Display rounds ',\n    component: <DisplayRounds />,\n    props: [\n      {\n        prop: 'numRounds',\n        key: 'numRounds',\n        description: 'The total number of rounds',\n        type: 'number',\n        defaultValue: DisplayRounds.defaultProps.numRounds,\n      },\n      {\n        prop: 'curRound',\n        key: 'curRound',\n        description: \"The number of the current round\",\n        type: 'number',\n        defaultValue: DisplayRounds.defaultProps.curRound,\n      },\n    ]\n};\n\nexport default DisplayRounds;\n","// Add helpers here. This is usually code that is just JS and not React code. Example: write a function that\n// calculates number of minutes when passed in seconds. Things of this nature that you don't want to copy/paste\n// everywhere.\n\nexport const STATUS = {\n  PAUSED: 'paused',\n  RUNNING: 'running',\n  RESTING: 'resting',\n  RESET: 'reset',\n};\n","/**\n * ButtonPanel handles layout of the the button set\n */\n import React from \"react\";\n import PropTypes from \"prop-types\";\n import styled from \"styled-components\";\n import { STATUS } from \"../../utils/helpers\"\n\n import Button from \"./Button\";\n\n const Container = styled.div`\n   display: flex;\n   flex-direction: row;\n   justify-content: space-around;\n`;\n\n class ButtonPanel extends React.Component {\n\n   // Change button text based on status\n   getText(status) {\n     switch (status) {\n       case STATUS.RUNNING:\n       case STATUS.RESTING:\n        return 'Pause';\n       case STATUS.RESET:\n       case STATUS.PAUSED:\n       default:\n        return 'Start';\n      };\n   };\n\n   render() {\n     const {onClick, onReset, status} = this.props;\n     return (\n       <Container>\n         <Button\n           size='large'\n           active={false}\n           text='Reset'\n           onClick={onReset}\n         />\n          <Button\n            size='large'\n            active={true}\n            text={this.getText(status)}\n            onClick={onClick}\n          />\n       </Container>\n     )\n   };\n }\n\n ButtonPanel.propTypes = {\n   // Callback for the primary button\n   onClick: PropTypes.func,\n   // Callback for the reset button\n   onReset: PropTypes.func,\n   // Status of the timer\n   status: PropTypes.oneOf(STATUS),\n };\n\n ButtonPanel.defaultProps = {\n   status: STATUS.RESET,\n };\n // Class param description for the docs=\n ButtonPanel.docs =   {\n     title: 'ButtonPanel ',\n     component: <ButtonPanel  onClick={()=>{}} />,\n     props: [\n       {\n         prop: 'onClick',\n         key: 'onClick',\n         description: 'Callback for clicking primary button',\n         type: 'function',\n         defaultValue: 'none',\n       },\n       {\n         prop: 'onReset',\n         key: 'onReset',\n         description: 'Callback for clicking reset button',\n         type: 'function',\n         defaultValue: 'none',\n       },\n       {\n         prop: 'status',\n         key: 'status',\n         description: 'Status of the timer',\n         type: 'string',\n         defaultValue: ButtonPanel.defaultProps.status,\n       }\n     ]\n }\n\n export default ButtonPanel;\n","/**\n * Panel handles layout of the timer\n * It also controls the color palette\n */\n import React from \"react\";\n import PropTypes from \"prop-types\";\n import styled from \"styled-components\";\n\n import DisplayTime from \"./DisplayTime\";\n import DisplayRounds from \"./DisplayRounds\";\n import Input from \"./Input\";\n import ButtonPanel from \"./ButtonPanel\";\n import { STATUS } from \"../../utils/helpers\";\n import GENERIC  from \"../../shared/COLOR\";\n\n const primaryColor =  GENERIC.PANEL.DEFAULT.background;\n\n const PanelStyle = styled.div`\n   display: flex;\n   flex-direction: column;\n   justify-content: center;\n   width: 400px;\n   /* Using Gill Sans because it's fun, easy to read, and emits energy */\n   font-family: \"Gill Sans\", sans-serif;\n   background-color: ${primaryColor};\n   color: ${GENERIC.PANEL.DEFAULT.color};\n`;\n\n const InputsContainer = styled.div`\n   color: ${GENERIC.PANEL.INPUT.color};\n   background-color: ${GENERIC.PANEL.INPUT.background};\n   padding: 40px 2px;\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n`;\n\n  const DisplayContainer = styled.div`\n    background-color: ${GENERIC.PANEL.DISPLAY.background};\n    padding: 60px 20px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n  `;\n\n  const ControlsContainer = styled.div`\n    background-color: ${GENERIC.PANEL.CONTROLS.background};\n    padding: 20px 40px;\n  `;\n\n class Panel extends React.Component {\n   render() {\n     const {inputs, displayTimes, displayRounds, onClick, onReset, status} = this.props;\n     return (\n       <PanelStyle>\n        <InputsContainer>\n          {inputs}\n        </InputsContainer>\n        <DisplayContainer>\n          {displayTimes}\n          {displayRounds}\n        </DisplayContainer>\n        <ControlsContainer>\n          <ButtonPanel\n            status={status}\n            onClick={onClick}\n            onReset={onReset}\n          />\n        </ControlsContainer>\n       </PanelStyle>\n     )\n   };\n }\n\n Panel.propTypes = {\n   // An array of display round objects\n   displayRound: PropTypes.arrayOf(DisplayRounds),\n   // An array of display time objects\n   displayTime: PropTypes.arrayOf(DisplayTime),\n   // An Array of input objects\n   inputs: PropTypes.arrayOf(Input),\n   // Callback for clicking the primary button\n   onClick: PropTypes.func,\n   // Callback for clicking the reset button\n   onReset: PropTypes.func,\n   // The status of the timer (running, paused, etc)\n   status: PropTypes.oneOf(STATUS),\n };\n\n Panel.defaultProps = {\n    status: STATUS.RESET,\n };\n\n // Class description for the docs\n Panel.docs =   {\n     title: 'Panel ',\n     component: <Panel onClick={()=>{}} />,\n     props: [\n       {\n         prop: 'inputs',\n         key: 'inputs',\n         description: \"An Array of Input objects\",\n         type: \"[Input]\",\n         defaultValue: \"none\",\n       },\n       {\n         prop: 'displayRound',\n         key: 'displayRound',\n         description: \"An Array of DisplayRound objects\",\n         type: \"[DisplayRound]\",\n         defaultValue: \"none\",\n       },\n       {\n         prop: 'displayTimes',\n         key: 'displayTimes',\n         description: \"An Array of DisplayTimes objects\",\n         type: \"[DisplayTimes]\",\n         defaultValue: \"none\",\n       },\n       {\n         prop: 'onClick',\n         key: 'onClick',\n         description: 'Callback for clicking primary button',\n         type: 'function',\n         defaultValue: 'none',\n       },\n       {\n         prop: 'onReset',\n         key: 'onReset',\n         description: 'Callback for clicking reset button',\n         type: 'function',\n         defaultValue: 'none',\n       },\n       {\n         prop: 'status',\n         key: 'status',\n         description: 'Status of the timer',\n         type: 'string',\n         defaultValue: Panel.defaultProps.status,\n       }\n     ]\n }\n\n export default Panel;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport DocumentComponent from \"../components/documentation/DocumentComponent\";\n\n// Components to describe\nimport Loading from \"../components/generic/Loading\";\nimport Button from \"../components/generic/Button\";\nimport DisplayTime from \"../components/generic/DisplayTime\";\nimport Input from \"../components/generic/Input\";\nimport DisplayRounds from \"../components/generic/DisplayRounds\";\nimport Panel from \"../components/generic/Panel\";\nimport ButtonPanel from \"../components/generic/ButtonPanel\";\n\n// The list of components to Describe\nconst DocList = [Loading, DisplayTime, Input, DisplayRounds, Button, ButtonPanel, Panel];\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nconst Title = styled.div`\n  font-size: 2rem;\n`;\n\nclass Documentation extends React.Component {\n  render() {\n    // compomose the component elements\n    const components = DocList.map(CurrComp => {\n      const {title, props} = CurrComp.docs;\n      return (\n        <DocumentComponent\n          key={title}\n          title= {title}\n          component= <CurrComp />\n          propDocs={props}\n        />\n      )\n    })\n    return (\n      <Container>\n        <div>\n          <Title>Documentation</Title>\n          {components}\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default Documentation;\n","import React from \"react\";\n\n// Import components\nimport Panel from \"../generic/Panel\";\nimport Input from \"../generic/Input\";\nimport DisplayTime from \"../generic/DisplayTime\";\n\nclass Stopwatch extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seconds: 0,\n      curSecond: 0,\n    };\n  }\n\n  onChange = (event) => {\n    const num = parseInt(event.target.value);\n    this.setState({seconds: num > 0 ? num : 0});\n  }\n\n  render() {\n    const {seconds, curSecond} = this.state;\n    const timerTitle = \"Stopwatch\";\n    const inputs = [\n         <Input\n          onChange={this.onChange}\n          label=\"End seconds\"\n          name=\"seconds\"\n          value={seconds}\n        />\n    ];\n    // Stop watch shows 2 display times, the count up and end time\n    const displayTimes = [\n      <DisplayTime\n        label=\"\"\n        seconds={seconds}\n        active={false}\n      />,\n      <DisplayTime\n        seconds={curSecond}\n        size='large'\n        active={true}\n      />\n    ]\n\n    return (\n      <div>\n        <Panel\n            displayTimes={displayTimes}\n            timerTitle={timerTitle}\n            seconds={seconds}\n            curSecond={curSecond}\n            inputs={inputs}\n            // onStart={onStartHandler}\n            // onStop={onStopHandler}\n            // onPause={onPauseHandler}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Stopwatch;\n","import React from \"react\";\n\n// Import components\nimport Panel from \"../generic/Panel\";\nimport Input from \"../generic/Input\";\nimport DisplayTime from \"../generic/DisplayTime\";\n\nclass Countdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seconds: 0,\n      curSecond: 0,\n    };\n  }\n\n  onChange = (event) => {\n    const num = parseInt(event.target.value);\n    this.setState(\n      {seconds: num > 0 ? num : 0,\n      curSecond: num > 0 ? num : 0}\n    );\n  }\n\n  render() {\n    const {seconds, curSecond} = this.state;\n    const timerTitle = \"Stopwatch\";\n    const inputs = [\n         <Input\n          onChange={this.onChange}\n          label=\"Seconds\"\n          name=\"seconds\"\n          value={seconds}\n        />\n    ];\n    // Countdown displays the single count down time\n    const displayTimes = [\n      <DisplayTime\n        seconds={curSecond}\n        size='large'\n        active={true}\n      />\n    ]\n\n    return (\n      <div>\n        <Panel\n            timerTitle={timerTitle}\n            seconds={seconds}\n            curSecond={curSecond}\n            inputs={inputs}\n            displayTimes={displayTimes}\n            // onStart={onStartHandler}\n            // onStop={onStopHandler}\n            // onPause={onPauseHandler}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Countdown;\n","import React from \"react\";\n\n// Import components\nimport Panel from \"../generic/Panel\";\nimport Input from \"../generic/Input\";\nimport DisplayRounds from \"../generic/DisplayRounds\";\nimport DisplayTime from \"../generic/DisplayTime\";\nimport { STATUS } from \"../../utils/helpers\"\n\nclass XY extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      workSecs: 0,\n      rounds:0,\n      curSec: 0,\n      curRound: 0,\n      status: STATUS.RESET,\n    };\n  }\n\n  onChange = (event) => {\n    const num = parseInt(event.target.value);\n    this.setState(\n      {seconds: num > 0 ? num : 0,\n      curSecond: num > 0 ? num : 0}\n    );\n  }\n\n  onResetHandler() {\n    // TODO: stop and clear input\n  }\n\n  onClickHandler() {\n    // TODO: change status to starting\n  }\n\n  render() {\n    const { workSecs, rounds, curRound, curSecond } = this.state;\n    const timerTitle = \"XY\";\n    const inputs = [\n       <Input\n        onChange={this.onChange}\n        label=\"Seconds\"\n        name=\"work\"\n        value={workSecs}\n        key=\"1\"\n      />,\n       <Input\n        onChange={this.onChange}\n        label=\"Rounds\"\n        name=\"rounds\"\n        value={rounds}\n        key=\"2\"\n      />\n    ];\n    // Countdown displays the single count down time\n    const displayTimes = [\n      <DisplayTime\n        seconds={workSecs}\n        key=\"1\"\n        active={false}\n      />,\n      <DisplayTime\n        seconds={curSecond}\n        size='large'\n        key=\"2\"\n        active={true}\n      />\n    ]\n    const displayRounds = [\n      <DisplayRounds\n        numRounds={8} //{rounds}\n        curRound={curRound || 3} //{curRound}\n      />\n    ];\n\n    return (\n      <div>\n        <Panel\n            timerTitle={timerTitle}\n            seconds={workSecs}\n            curSecond={curSecond}\n            displayRounds={displayRounds}\n            inputs={inputs}\n            displayTimes={displayTimes}\n            onReset={this.onReset}\n            onClick={this.onClick}\n        />\n      </div>\n    );\n  }\n}\n\nexport default XY;\n","import React from \"react\";\n\n// Import components\nimport Panel from \"../generic/Panel\";\nimport Input from \"../generic/Input\";\nimport DisplayTime from \"../generic/DisplayTime\";\nimport DisplayRounds from \"../generic/DisplayRounds\";\nimport {STATUS} from \"../../utils/helpers\"\n\nclass Tabata extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      workSecs: 0,\n      restSecs: 0,\n      rounds:0,\n      curSec: 0,\n      curRound: 0,\n      status: STATUS.RESET,\n    };\n  }\n\n  onChange = (event) => {\n    const num = parseInt(event.target.value);\n    this.setState(\n      {seconds: num > 0 ? num : 0,\n      curSecond: num > 0 ? num : 0}\n    );\n  }\n\n  render() {\n    const {workSecs, restSecs, rounds, curRound, curSecond, status} = this.state;\n    const timerTitle = \"Tabata\";\n    // The amount of total secs in current Tabata segment\n    const seconds =  status === STATUS.RESTING ? restSecs : workSecs;\n    const label = status === STATUS.RESTING ? 'Rest' : 'Work';\n    const inputs = [\n         <Input\n          onChange={this.onChange}\n          label=\"Work seconds\"\n          name=\"Work\"\n          value={workSecs}\n        />,\n        <Input\n         onChange={this.onChange}\n         label=\"Rest seconds\"\n         name=\"rest\"\n         value={restSecs}\n       />,\n       <Input\n        onChange={this.onChange}\n        label=\"Rounds\"\n        name=\"rounds\"\n        value={rounds}\n      />\n    ];\n    // Countdown displays the single count down time\n    const displayTimes = [\n      <DisplayTime\n        label={label}\n        seconds={seconds}\n        key=\"1\"\n        active={false}\n      />,\n      <DisplayTime\n        label='a'\n        seconds={curSecond}\n        size='large'\n        active={true}\n      />\n    ];\n    const displayRounds = [\n      <DisplayRounds\n        numRounds={rounds || 4} //TODO: remove temp count\n        curRound={curRound || 3} //TODO: remove temp count\n      />\n    ];\n\n    return (\n      <div>\n        <Panel\n            timerTitle={timerTitle}\n            seconds={seconds}\n            curSecond={curSecond}\n            inputs={inputs}\n            displayTimes={displayTimes}\n            displayRounds={displayRounds}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Tabata;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Stopwatch from \"../components/timers/Stopwatch\";\nimport Countdown from \"../components/timers/Countdown\";\nimport XY from \"../components/timers/XY\";\nimport Tabata from \"../components/timers/Tabata\";\n\nconst Timers = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Timer = styled.div`\n  border: 1px solid gray;\n  padding: 20px;\n  margin: 10px;\n`;\n\nconst TimerTitle = styled.div``;\n\nfunction App() {\n  const timers = [\n    { title: \"Stopwatch\", C: <Stopwatch /> },\n    { title: \"Countdown\", C: <Countdown /> },\n    { title: \"XY\", C: <XY /> },\n    { title: \"Tabata\", C: <Tabata /> },\n  ];\n\n  return (\n    <Timers>\n      {timers.map((timer) => (\n        <Timer>\n          <TimerTitle>{timer.title}</TimerTitle>\n          {timer.C}\n        </Timer>\n      ))}\n    </Timers>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport DocumentationView from \"./views/DocumentationView\";\nimport TimersView from \"./views/TimersView\";\n\nconst Container = styled.div`\n  background: #f0f6fb;\n  height: 100vh;\n  overflow: auto;\n  font-size: 1.4rem;\n  /* Using Gill Sans because it's fun, easy to read, and emits energy */\n  font-family: \"Gill Sans\", sans-serif;\n`;\n\nfunction App() {\n  return (\n    <Container>\n      <Router>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Timers</Link>\n            </li>\n            <li>\n              <Link to=\"/docs\">Documentation</Link>\n            </li>\n          </ul>\n        </nav>\n        <Switch>\n          <Route path=\"/docs\">\n            <DocumentationView />\n          </Route>\n          <Route path=\"/\">\n            <TimersView />\n          </Route>\n        </Switch>\n      </Router>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}